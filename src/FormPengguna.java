
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author edo
 */
public class FormPengguna extends javax.swing.JDialog {
    
    List<Pengguna> listPengguna = new ArrayList<>();
    private boolean isEdit = false;

    /**
     * Creates new form FormPengguna
     */
    public FormPengguna(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        initState();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPengguna = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnTambah = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPengguna = new javax.swing.JTable();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnResetCari = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txtId = new javax.swing.JTextField();
        cmbPegawai = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Form Pengguna");

        jLabel1.setText("Nama Pengguna");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setText("ID");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tblPengguna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPengguna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPenggunaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPengguna);

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnResetCari.setText("Reset");
        btnResetCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCariActionPerformed(evt);
            }
        });

        cmbPegawai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPengguna, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(txtUsername))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSimpan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetCari)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2)
                .addGap(12, 12, 12))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEdit, btnHapus, btnSimpan, btnTambah});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCari, btnResetCari});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtPengguna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnSimpan)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnCari)
                    .addComponent(btnResetCari)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        SwingUtil swingUtil = new SwingUtil();
        swingUtil.setActive(true, txtPengguna, txtUsername);
        txtPassword.setEnabled(true);
        txtId.setEnabled(true);
        cmbPegawai.setEnabled(true);
        btnSimpan.setEnabled(true);
        isEdit = false;
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String username = txtUsername.getText();
        String password = String.valueOf(txtPassword.getPassword());               
        
        
        if (isEdit) {
            int id = Integer.parseInt(txtId.getText());
            Connection conn = DBConnection.getInstance().getConnection();
            String sql = "UPDATE user SET username = ?, password = sha1(?) WHERE id = ?";
            try {
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, username);
                st.setString(2, password);
                st.setInt(3, id);
                st.executeUpdate();                
            } catch (SQLException ex) {
                Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
            } 
        } else {
            int idPegawai = Integer.parseInt(cmbPegawai.getSelectedItem().toString());
            Connection conn = DBConnection.getInstance().getConnection();
            String sql = "INSERT INTO user (username, password, id_pegawai) VALUES (?, ?, ?)";
            try {
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, username);
                st.setString(2, password);
                st.setInt(3, idPegawai);
                st.executeUpdate();
                initState();
            } catch (SQLException ex) {
                Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
        
        initState();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        List<Pengguna> filterPengguna = new ArrayList<>();
        
        Connection conn = DBConnection.getInstance().getConnection();
        String sql = "SELECT u.*, nama FROM user u INNER JOIN pegawai p ON u.id_pegawai = p.id ORDER BY username ASC";
        try {
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, '%' + txtCari.getText() + '%');
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                Pengguna user = new Pengguna(rs.getInt("id"), rs.getString("nama"), rs.getString("username"));
                filterPengguna.add(user);
            }
            tblPengguna.setModel(new TableModelPengguna(filterPengguna));
        } catch (SQLException ex) {
            Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
        }               
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnResetCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCariActionPerformed
        txtCari.setText("");
        tampilData();
    }//GEN-LAST:event_btnResetCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        if (txtId.getText().length() > 0) {
            int jawab = JOptionPane.showConfirmDialog(this, "Anda yakin akan menghapus data ini?", "Konfirmasi Hapus", JOptionPane.OK_CANCEL_OPTION);
            if (jawab == JOptionPane.OK_OPTION) {
                Connection conn = DBConnection.getInstance().getConnection();
                String sql = "DELETE FROM user WHERE id = ?";
                try {
                    PreparedStatement st = conn.prepareStatement(sql);
                    st.setInt(1, Integer.parseInt(txtId.getText()));
                    st.executeUpdate();
                    initState();
                } catch (SQLException ex) {
                    Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
                }  
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblPenggunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPenggunaMouseClicked
        int selectedRow = tblPengguna.getSelectedRow();
        if (selectedRow > -1) {
            txtId.setText(tblPengguna.getValueAt(selectedRow, 0).toString());
            txtPengguna.setText(tblPengguna.getValueAt(selectedRow, 1).toString());
            txtUsername.setText(tblPengguna.getValueAt(selectedRow, 2).toString());
            btnEdit.setEnabled(true);
            btnHapus.setEnabled(true);
            cmbPegawai.setEnabled(true);            
        }
    }//GEN-LAST:event_tblPenggunaMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
        btnSimpan.setEnabled(true);
        isEdit = true;
    }//GEN-LAST:event_btnEditActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnResetCari;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbPegawai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblPengguna;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtId;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPengguna;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void initState() {
        SwingUtil swingUtil = new SwingUtil();
        
        swingUtil.setActive(false, txtPengguna, txtUsername);
        
        txtPassword.setEnabled(false);        
        txtId.setEnabled(false);
        cmbPegawai.setEnabled(false);
        
        swingUtil.setActive(false, btnSimpan, btnEdit, btnHapus); 
        
        swingUtil.clearText(txtPengguna, txtUsername);
        txtPassword.setText("");
        txtId.setText("");
        
        tampilData();
        isiCombo();
    }

    private void tampilData() {        
        listPengguna = new ArrayList<>();
        
        Connection conn = DBConnection.getInstance().getConnection();
        Statement st;
        String sql = "SELECT u.*, nama FROM user u INNER JOIN pegawai p ON u.id_pegawai = p.id ORDER BY username ASC";
        try {
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Pengguna user = new Pengguna(rs.getInt("id"), rs.getString("nama"), rs.getString("username"));
                listPengguna.add(user);
            }
            tblPengguna.setModel(new TableModelPengguna(listPengguna));
        } catch (SQLException ex) {
            Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
        }                       
    }

    private void isiCombo() {
        String sql = "SELECT id FROM pegawai";
        Connection conn = DBConnection.getInstance().getConnection();
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            int rowsCount = rs.last() ? rs.getRow() : 0;
            rs.beforeFirst();
            
            String idPegawai[] = new String[rowsCount];
            
            int idx = 0;
            while(rs.next()) {
                idPegawai[idx] = rs.getInt("id") + "";
                idx++;
            }
            
            cmbPegawai.setModel(new DefaultComboBoxModel<>(idPegawai));
        } catch (SQLException ex) {
            Logger.getLogger(FormPengguna.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
}
